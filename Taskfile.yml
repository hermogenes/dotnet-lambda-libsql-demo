---
version: "3"

dotenv: [".env.local", ".env"]

tasks:
  get-function-url:
    vars:
      FUNCTION: '{{ default "libsql" .FUNCTION}}'
    cmds:
      - aws cloudformation describe-stacks --region $AWS_REGION --stack-name dotnet-demo --query 'Stacks[0].Outputs[?OutputKey==`{{.FUNCTION}}FunctionUrl`].OutputValue' --output text
  loadtest:
    cmds:
      - echo "Running load test with Artillery..."
      - echo "API_URL {{trimSuffix "/" .API_URL}}"
      - echo "TEST_FILE {{.TEST_FILE}}"
      - mkdir -p ./loadtest/results
      - npx artillery run ./loadtest/{{.TEST_FILE}} --target {{trimSuffix "/" .API_URL}} --output ./loadtest/results/{{.TEST_RESULT_OUTPUT}}.json
    vars:
      TEST_FILE: '{{ default "load-test.yml" .TEST_FILE}}'
      TEST_RESULT_OUTPUT: '{{ default "output" .TEST_RESULT_OUTPUT}}'
      API_URL:
        sh: task get-function-url FUNCTION={{.FUNCTION}}
  libsql-setup:
    cmds:
      - node ./db/setup.mjs
  aws-setup:
    cmds:
      - sam build --parameter-overrides "Architecture=$LAMBDA_ARCH"
      - sam deploy --region $AWS_REGION --no-confirm-changeset --no-fail-on-empty-changeset --parameter-overrides "LibSqlClientUrl=$LIBSQL_CLIENT_URL" "LibSqlClientToken=$LIBSQL_CLIENT_TOKEN" "Architecture=$LAMBDA_ARCH"
  aws-teardown:
    cmds:
      - sam delete --region $AWS_REGION --no-prompts
